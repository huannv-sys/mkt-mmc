# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = migrations

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file as
# well as the filename.
# If specified, must be a string which can be parsed by dateutil.tz
# e.g. "US/Pacific", "utc", "Europe/Berlin"
# If omitted, context.get_timezone() or
# migration_context.get_timezone() will be used
# timezone = utc

[alembic:runtime.environment]
# Uncomment this section and specify your config file to use a custom
# EnvironmentContext
# environment = myapp.environment.environment

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine
# "level" here can be NONE, DEBUG, INFO, WARN, etc.
# Note: The recommended way to enable SQL echoing is to set the
# "echo" flag within the "create_engine()" call in your application.
# This setting is intended to be used for temporary debugging purposes
# only. If you use this, also remember to set "echo" to False in your
# application during production usage.
# level = INFO

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

# Custom .ini values, for use in .py files
[myproject]
# sqlalchemy.url = driver://user:pass@localhost/dbname
sqlalchemy.url = sqlite:///./test.db